name: CI/CD Workflow

on:
  push:
    branches:
      - main    # Trigger workflow on push to 'main' branch
  pull_request:
    branches:
      - main    # Trigger workflow on pull requests targeting 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Use the required Python version
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov  # Make sure pytest-cov is installed

    # Set the PYTHONPATH and run tests
    - name: Set PYTHONPATH and run tests
      run: |
        export PYTHONPATH=$(pwd)/src  # Set the PYTHONPATH to include the src directory
        python -m pytest --maxfail=1 --disable-warnings -q --tb=short  # Run the tests

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine upload --repository testpypi dist/*

